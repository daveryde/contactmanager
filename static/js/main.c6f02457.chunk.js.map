{"version":3,"sources":["context/ContactReducer.js","context/ContactState.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","index.js"],"names":["state","action","type","contact","payload","contacts","map","id","filter","errors","initialState","ContactContext","createContext","StateProvider","children","useReducer","ContactReducer","dispatch","useEffect","getContacts","getContact","a","axios","get","res","data","err","response","error","addContact","post","updateContact","config","headers","put","setCurrent","clearCurrent","Provider","value","current","deleteContact","Contact","useContext","useState","isShowing","setShowing","onDeleteClick","name","email","phone","className","onClick","style","cursor","float","color","to","marginRight","Contacts","key","TextInputGroup","label","placeholder","onChange","htmlFor","classnames","defaultProps","AddContact","setContact","history","useHistory","onSubmit","e","preventDefault","push","target","EditContact","Header","props","branding","href","App","exact","path","component","About","NotFound","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6f02457.chunk.js","sourcesContent":["export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'GET_CONTACT':\r\n      return {\r\n        ...state,\r\n        contact: action.payload\r\n      }\r\n    case 'GET_CONTACTS':\r\n      return {\r\n        ...state,\r\n        contacts: action.payload\r\n      }\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'SET_CURRENT':\r\n      return {\r\n        ...state,\r\n        contact: action.payload\r\n      };\r\n    case 'CLEAR_CURRENT':\r\n      return {\r\n        ...state,\r\n        contact: null\r\n      }\r\n    case 'CONTACTS_ERROR':\r\n      return {\r\n        ...state,\r\n        errors: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import React, { createContext, useEffect, useReducer } from 'react';\r\nimport ContactReducer from './ContactReducer';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  contact: null,\r\n  errors: null\r\n};\r\n\r\nexport const ContactContext = createContext(initialState);\r\n\r\nexport const StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\r\n\r\n  // Get contacts on render\r\n  useEffect(() => {\r\n    getContacts();\r\n  }, [])\r\n\r\n  // Get contact\r\n  const getContact = async (id) => {\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    dispatch({ type: 'GET_CONTACT', payload: res.data })\r\n  }\r\n\r\n  // Get contacts\r\n  const getContacts = async () => {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    try {\r\n      dispatch({ type: 'GET_CONTACTS', payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: 'CONTACTS_ERROR', payload: err.response.data.error });\r\n    }\r\n  }\r\n\r\n  // Add contact\r\n  const addContact = async (contact) => {\r\n    await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users', contact);\r\n\r\n    try {\r\n      dispatch({ type: 'ADD_CONTACT', payload: contact })\r\n    } catch (err) {\r\n      dispatch({ type: 'CONTACTS_ERROR', payload: err.response.data.error });\r\n    }\r\n  }\r\n\r\n  // Update contact\r\n  const updateContact = async (contact) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n      }\r\n\r\n      const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${contact.id}`, contact, config)\r\n\r\n      dispatch({ type: 'UPDATE_CONTACT', payload: res.data })\r\n    } catch (err) {\r\n      dispatch({ type: 'CONTACTS_ERROR', payload: err.response.data.error })\r\n    }\r\n  }\r\n\r\n  // Delete contact\r\n  const deleteContact = (id) => {\r\n    try {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n    } catch (err) {\r\n      dispatch({ type: 'CONTACTS_ERROR', payload: err.response.data.error });\r\n    }\r\n  }\r\n\r\n  // Set current contact\r\n  const setCurrent = async (contact) => {\r\n    try {\r\n      dispatch({ type: 'SET_CURRENT', payload: contact })\r\n    } catch (err) {\r\n      dispatch({ type: 'CONTACTS_ERROR', payload: err.response.data.error });\r\n    }\r\n  }\r\n\r\n  // Clear current contact\r\n  const clearCurrent = async () => {\r\n    dispatch({ type: 'CLEAR_CURRENT' })\r\n  }\r\n\r\n  return (\r\n    <ContactContext.Provider value={{\r\n      contacts: state.contacts,\r\n      current: state.contact,\r\n      errors: state.errors,\r\n      getContact,\r\n      getContacts,\r\n      addContact,\r\n      updateContact,\r\n      deleteContact,\r\n      setCurrent,\r\n      clearCurrent\r\n    }}>\r\n      {children}\r\n    </ContactContext.Provider>\r\n  );\r\n}","import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { ContactContext } from '../../context/ContactState';\r\n\r\nconst Contact = ({ contact }) => {\r\n  const { deleteContact, setCurrent } = useContext(ContactContext);\r\n  const [isShowing, setShowing] = useState(false);\r\n\r\n  // Delete contact\r\n  const onDeleteClick = async (id) => {\r\n    deleteContact(id);\r\n  };\r\n\r\n  // Destructure values from contact obj\r\n  const { id, name, email, phone } = contact;\r\n\r\n  return (\r\n    <div className=\"card card-body mb-3\">\r\n      <h4>\r\n        {name}{' '}\r\n        <i\r\n          onClick={() => setShowing(!isShowing)}\r\n          className=\"fas fa-sort-down\"\r\n          style={{ cursor: 'pointer' }}\r\n        />\r\n        <i\r\n          className=\"fas fa-times\"\r\n          style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n          onClick={() => onDeleteClick(id)}\r\n        />\r\n        <Link to={`contact/edit/${id}`}>\r\n          <i\r\n            className=\"fas fa-pencil-alt\"\r\n            style={{\r\n              cursor: 'pointer',\r\n              float: 'right',\r\n              color: 'black',\r\n              marginRight: '1rem'\r\n            }}\r\n            onClick={() => setCurrent(contact)}\r\n          />\r\n        </Link>\r\n      </h4>\r\n      {isShowing ? (\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">{email}</li>\r\n          <li className=\"list-group-item\">{phone}</li>\r\n        </ul>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\n// Data type check\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport Contact from './Contact';\r\nimport { ContactContext } from '../../context/ContactState';\r\n\r\nconst Contacts = () => {\r\n  const { contacts } = useContext(ContactContext);\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"display-4 mb-2\">\r\n        <span className=\"text-danger\">Contact</span>List\r\n      </h1>\r\n      {/* Check for contacts in state and map/create a contact component for each  */}\r\n      {contacts && contacts.map(contact => (\r\n        <Contact key={contact.id} contact={contact} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classname';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Prop data type check\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ContactContext } from '../../context/ContactState';\r\n\r\n// Helper component\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nconst AddContact = () => {\r\n  const { addContact, errors } = useContext(ContactContext);\r\n  const [contact, setContact] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  });\r\n\r\n  // History hook\r\n  let history = useHistory();\r\n\r\n  // Destructure values from component state\r\n  const { name, email, phone } = contact;\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check For Errors\r\n    if (name === '') {\r\n      setContact({\r\n        errors: { name: 'Name is required' }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      setContact({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      setContact({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    // New contact obj with component state\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    // Add new contact to context\r\n    addContact(newContact);\r\n\r\n    // Clear component state\r\n    setContact({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // Return to contacts list after contact added to context\r\n    history.push('/');\r\n  };\r\n\r\n  // Update component state onchange\r\n  const onChange = e => setContact({ ...contact, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-header\">Add Contact</div>\r\n      <div className=\"card-body\">\r\n        <form onSubmit={onSubmit}>\r\n          <TextInputGroup\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            errors={errors}\r\n          />\r\n          <TextInputGroup\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            error={errors}\r\n          />\r\n          <TextInputGroup\r\n            label=\"Phone\"\r\n            name=\"phone\"\r\n            placeholder=\"Enter Phone\"\r\n            value={phone}\r\n            onChange={(e) => onChange(e)}\r\n            errors={errors}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Add Contact\"\r\n            className=\"btn btn-light btn-block\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ContactContext } from '../../context/ContactState';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nconst EditContact = () => {\r\n  const { current, updateContact, clearCurrent } = useContext(ContactContext);\r\n  const [contact, setContact] = useState({\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    error: {}\r\n  });\r\n\r\n  // Get history obj hook\r\n  let history = useHistory();\r\n\r\n  // Get current contact by id\r\n  useEffect(() => {\r\n    if (current !== null) {\r\n      setContact({\r\n        id: current.id,\r\n        name: current.name,\r\n        email: current.email,\r\n        phone: current.phone\r\n      });\r\n    }\r\n  }, [current])\r\n\r\n  // Destructure component state\r\n  const { name, email, phone, errors } = contact;\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check For Missing Fields\r\n    if (name === '') {\r\n      setContact({\r\n        errors: { name: 'Name is required' }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      setContact({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      setContact({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    // update component state contact\r\n    updateContact(contact);\r\n\r\n    // Clear State\r\n    setContact({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      error: {}\r\n    });\r\n\r\n    // Clear current contact from context\r\n    clearCurrent();\r\n\r\n    // Return to contacts list after contact added to context\r\n    history.push('/');\r\n  };\r\n\r\n  const onChange = e => setContact({ ...contact, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-header\">Edit Contact</div>\r\n      <div className=\"card-body\">\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n          <TextInputGroup\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            errors={errors}\r\n          />\r\n          <TextInputGroup\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            errors={errors}\r\n          />\r\n          <TextInputGroup\r\n            label=\"Phone\"\r\n            name=\"phone\"\r\n            placeholder=\"Enter Phone\"\r\n            value={phone}\r\n            onChange={(e) => onChange(e)}\r\n            errors={errors}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Add Contact\"\r\n            className=\"btn btn-light btn-block\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"> Home</i>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"> Add</i>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"> About</i>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple App to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n// Components\r\nimport Contacts from './components/contacts/Contacts';\r\nimport AddContact from './components/contacts/AddContact';\r\nimport EditContact from './components/contacts/EditContact';\r\nimport Header from './components/layout/Header';\r\nimport About from './components/pages/About';\r\nimport NotFound from './components/pages/NotFound';\r\n// import Test from './components/test/Test';\r\n\r\n// Contact State\r\nimport { StateProvider } from './context/ContactState';\r\n\r\n// Styles\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <StateProvider>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header branding=\"Contact Manager\" />\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Contacts} />\r\n                <Route exact path=\"/contact/add\" component={AddContact} />\r\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\r\n                <Route exact path=\"/about\" component={About} />\r\n                {/* <Route exact path=\"/test\" component={Test} /> */}\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </StateProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}