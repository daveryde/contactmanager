{"version":3,"sources":["context/contact/ContactContext.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","context/contact/ContactReducer.js","context/contact/ContactState.js","App.js","index.js"],"names":["ContactContext","createContext","Contact","contact","useContext","deleteContact","setCurrent","useState","isShowing","setShowing","onDeleteClick","id","a","name","email","phone","className","onClick","style","cursor","float","color","to","marginRight","Contacts","contacts","map","key","TextInputGroup","label","value","placeholder","type","onChange","error","htmlFor","classnames","defaultProps","AddContact","addContact","errors","setContact","history","useHistory","onSubmit","e","preventDefault","push","target","EditContact","current","updateContact","clearCurrent","useEffect","Header","props","branding","href","state","action","payload","filter","initialState","StateProvider","children","useReducer","ContactReducer","dispatch","getContacts","getContact","axios","get","res","data","err","response","post","config","headers","put","Provider","App","exact","path","component","About","NotFound","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f957d783.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst ContactContext = createContext();\r\n\r\nexport default ContactContext;","import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Context\r\nimport ContactContext from '../../context/contact/ContactContext';\r\n\r\nconst Contact = ({ contact }) => {\r\n  const { deleteContact, setCurrent } = useContext(ContactContext);\r\n  const [isShowing, setShowing] = useState(false);\r\n\r\n  // Delete contact\r\n  const onDeleteClick = async (id) => {\r\n    deleteContact(id);\r\n  };\r\n\r\n  // Destructure values from contact obj\r\n  const { id, name, email, phone } = contact;\r\n\r\n  return (\r\n    <div className=\"card card-body mb-3\">\r\n      <h4>\r\n        {name}{' '}\r\n        <i\r\n          onClick={() => setShowing(!isShowing)}\r\n          className=\"fas fa-sort-down\"\r\n          style={{ cursor: 'pointer' }}\r\n        />\r\n        <i\r\n          className=\"fas fa-times\"\r\n          style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n          onClick={() => onDeleteClick(id)}\r\n        />\r\n        <Link to={`contact/edit/${id}`}>\r\n          <i\r\n            className=\"fas fa-pencil-alt\"\r\n            style={{\r\n              cursor: 'pointer',\r\n              float: 'right',\r\n              color: 'black',\r\n              marginRight: '1rem'\r\n            }}\r\n            onClick={() => setCurrent(contact)}\r\n          />\r\n        </Link>\r\n      </h4>\r\n      {isShowing ? (\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">{email}</li>\r\n          <li className=\"list-group-item\">{phone}</li>\r\n        </ul>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\n// Data type check\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useEffect, useContext } from 'react';\r\n\r\n// Context\r\nimport ContactContext from '../../context/contact/ContactContext';\r\n\r\n// Child component\r\nimport Contact from './Contact';\r\n\r\nconst Contacts = () => {\r\n  const { contacts } = useContext(ContactContext);\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"display-4 mb-2\">\r\n        <span className=\"text-danger\">Contact</span>List\r\n      </h1>\r\n      {/* Check for contacts in state and map/create a contact component for each  */}\r\n      {contacts && contacts.map(contact => (\r\n        <Contact key={contact.id} contact={contact} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classname';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Prop data type check\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Context\r\nimport ContactContext from '../../context/contact/ContactContext';\r\n\r\n// Helper component\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nconst AddContact = () => {\r\n  const { addContact, errors } = useContext(ContactContext);\r\n  const [contact, setContact] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  });\r\n\r\n  // History hook\r\n  let history = useHistory();\r\n\r\n  // Destructure values from component state\r\n  const { name, email, phone } = contact;\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check For Errors\r\n    if (name === '') {\r\n      setContact({\r\n        errors: { name: 'Name is required' }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      setContact({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      setContact({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    // New contact obj with component state\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    // Add new contact to context\r\n    addContact(newContact);\r\n\r\n    // Clear component state\r\n    setContact({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // Return to contacts list after contact added to context\r\n    history.push('/');\r\n  };\r\n\r\n  // Update component state onchange\r\n  const onChange = e => setContact({ ...contact, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-header\">Add Contact</div>\r\n      <div className=\"card-body\">\r\n        <form onSubmit={onSubmit}>\r\n          <TextInputGroup\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            errors={errors}\r\n          />\r\n          <TextInputGroup\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            error={errors}\r\n          />\r\n          <TextInputGroup\r\n            label=\"Phone\"\r\n            name=\"phone\"\r\n            placeholder=\"Enter Phone\"\r\n            value={phone}\r\n            onChange={(e) => onChange(e)}\r\n            errors={errors}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Add Contact\"\r\n            className=\"btn btn-light btn-block\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// Context\r\nimport ContactContext from '../../context/contact/ContactContext';\r\n\r\n// Helper component\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nconst EditContact = () => {\r\n  const { current, updateContact, clearCurrent } = useContext(ContactContext);\r\n  const [contact, setContact] = useState({\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    error: {}\r\n  });\r\n\r\n  // Get history obj hook\r\n  let history = useHistory();\r\n\r\n  // Get current contact by id\r\n  useEffect(() => {\r\n    if (current !== null) {\r\n      setContact({\r\n        id: current.id,\r\n        name: current.name,\r\n        email: current.email,\r\n        phone: current.phone\r\n      });\r\n    }\r\n  }, [current])\r\n\r\n  // Destructure component state\r\n  const { name, email, phone, errors } = contact;\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check For Missing Fields\r\n    if (name === '') {\r\n      setContact({\r\n        errors: { name: 'Name is required' }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      setContact({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      setContact({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    // update component state contact\r\n    updateContact(contact);\r\n\r\n    // Clear State\r\n    setContact({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      error: {}\r\n    });\r\n\r\n    // Clear current contact from context\r\n    clearCurrent();\r\n\r\n    // Return to contacts list after contact added to context\r\n    history.push('/');\r\n  };\r\n\r\n  const onChange = e => setContact({ ...contact, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-header\">Edit Contact</div>\r\n      <div className=\"card-body\">\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n          <TextInputGroup\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            errors={errors}\r\n          />\r\n          <TextInputGroup\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            errors={errors}\r\n          />\r\n          <TextInputGroup\r\n            label=\"Phone\"\r\n            name=\"phone\"\r\n            placeholder=\"Enter Phone\"\r\n            value={phone}\r\n            onChange={(e) => onChange(e)}\r\n            errors={errors}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Add Contact\"\r\n            className=\"btn btn-light btn-block\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"> Home</i>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"> Add</i>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"> About</i>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple App to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'GET_CONTACT':\r\n      return {\r\n        ...state,\r\n        contact: action.payload\r\n      }\r\n    case 'GET_CONTACTS':\r\n      return {\r\n        ...state,\r\n        contacts: action.payload\r\n      }\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'SET_CURRENT':\r\n      return {\r\n        ...state,\r\n        contact: action.payload\r\n      };\r\n    case 'CLEAR_CURRENT':\r\n      return {\r\n        ...state,\r\n        contact: null\r\n      }\r\n    case 'CONTACTS_ERROR':\r\n      return {\r\n        ...state,\r\n        errors: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import React, { useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Context / Reducer\r\nimport ContactContext from './ContactContext';\r\nimport ContactReducer from './ContactReducer';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  contacts: [],\r\n  contact: null,\r\n  errors: null\r\n};\r\n\r\nexport const StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\r\n\r\n  // Get contacts on render\r\n  useEffect(() => {\r\n    getContacts();\r\n  }, [])\r\n\r\n  // Get contact\r\n  const getContact = async (id) => {\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    dispatch({ type: 'GET_CONTACT', payload: res.data })\r\n  }\r\n\r\n  // Get contacts\r\n  const getContacts = async () => {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    try {\r\n      dispatch({ type: 'GET_CONTACTS', payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: 'CONTACTS_ERROR', payload: err.response.data.error });\r\n    }\r\n  }\r\n\r\n  // Add contact\r\n  const addContact = async (contact) => {\r\n    await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users', contact);\r\n\r\n    try {\r\n      dispatch({ type: 'ADD_CONTACT', payload: contact })\r\n    } catch (err) {\r\n      dispatch({ type: 'CONTACTS_ERROR', payload: err.response.data.error });\r\n    }\r\n  }\r\n\r\n  // Update contact\r\n  const updateContact = async (contact) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n      }\r\n\r\n      const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${contact.id}`, contact, config)\r\n\r\n      dispatch({ type: 'UPDATE_CONTACT', payload: res.data })\r\n    } catch (err) {\r\n      dispatch({ type: 'CONTACTS_ERROR', payload: err.response.data.error })\r\n    }\r\n  }\r\n\r\n  // Delete contact\r\n  const deleteContact = (id) => {\r\n    try {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n    } catch (err) {\r\n      dispatch({ type: 'CONTACTS_ERROR', payload: err.response.data.error });\r\n    }\r\n  }\r\n\r\n  // Set current contact\r\n  const setCurrent = async (contact) => {\r\n    try {\r\n      dispatch({ type: 'SET_CURRENT', payload: contact })\r\n    } catch (err) {\r\n      dispatch({ type: 'CONTACTS_ERROR', payload: err.response.data.error });\r\n    }\r\n  }\r\n\r\n  // Clear current contact\r\n  const clearCurrent = async () => {\r\n    dispatch({ type: 'CLEAR_CURRENT' })\r\n  }\r\n\r\n  return (\r\n    <ContactContext.Provider value={{\r\n      contacts: state.contacts,\r\n      current: state.contact,\r\n      errors: state.errors,\r\n      getContact,\r\n      getContacts,\r\n      addContact,\r\n      updateContact,\r\n      deleteContact,\r\n      setCurrent,\r\n      clearCurrent\r\n    }}>\r\n      {children}\r\n    </ContactContext.Provider>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n// Components\r\nimport Contacts from './components/contacts/Contacts';\r\nimport AddContact from './components/contacts/AddContact';\r\nimport EditContact from './components/contacts/EditContact';\r\nimport Header from './components/layout/Header';\r\nimport About from './components/pages/About';\r\nimport NotFound from './components/pages/NotFound';\r\n// import Test from './components/test/Test';\r\n\r\n// Contact State\r\nimport { StateProvider } from './context/contact/ContactState';\r\n\r\n// Styles\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <StateProvider>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header branding=\"Contact Manager\" />\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Contacts} />\r\n                <Route exact path=\"/contact/add\" component={AddContact} />\r\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\r\n                <Route exact path=\"/about\" component={About} />\r\n                {/* <Route exact path=\"/test\" component={Test} /> */}\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </StateProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}